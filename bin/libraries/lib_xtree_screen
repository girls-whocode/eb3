#!/usr/bin/env bash
# title					:Enhanced BASH v3
# description			:
# author				:Jessica Brown
# date					:2022-04-21
# version				:3.0.0
# usage					:
# notes					:
# bash_version	        :5.1.16(1)-release
# ==============================================================================

function clear_screen() {
    echo -en "\033c";
}

function civis() {
    echo -en "\033[?25l";
}

function cnorm() {
    echo -en "\033[?12l\033[?25h";
}

function tputs() {
    echo -en "\033[${1};${2}H";
}

function cursorpos() {
    case $1 in
        up)
            i=0
            while [ $((++i)) -lt $2 ]; do tput cuu1; done;;
        
        down)
            i=0
            while [ $((++i)) -lt $2 ]; do tput cud1; done;;
        
        left)
            i=0
            while [ $((++i)) -lt $2 ]; do tput cul1; done;;

        right)
            tput cuf $2;;            

        col)
            i=0
            for ((i=0; i<=$2;i++)); do tput cuf1; done;;
        pos)
            tput cup $2 $3;;
        *)
            echo "Invalid option";;
    esac
}

function draw() {
    echo -en "\033%@";echo -en "\033(0";
}

function write() {
    echo -en "\033(B";
}

function screen_size() {
    if [[ "$(tput lines) $(tput cols)" != "${rows} ${columns}" ]]; then
        draw_border
    fi

    columns=$(tput cols)
    rows=$(tput lines)
}

function draw_border() {
    civis
    draw

    # Top of Directory
    echo -ne "${Grey}l"
    for ((c=1; c<columns-26; c++)); do
        echo -ne "${Grey}q"
    done
    echo -ne "${Grey}w"
    for ((c=columns-26; c<columns-2; c++)); do
        echo -ne "${Grey}q"
    done
    echo -e "${Grey}k"

    # Directory Cells
    for ((r=2; r<rows-10; r++)); do
        cursorpos pos ${r} 0
        echo -ne "${Grey}x"
        cursorpos pos ${r} $((columns-26))
        echo -ne "${Grey}x"
        cursorpos pos ${r} $((columns-1))
        echo -e "${Grey}x"
    done

    # Bottom of Directory
    echo -ne "${Grey}t"
    for ((c=1; c<columns-26; c++)); do
        echo -ne "${Grey}q"
    done
    echo -ne "${Grey}u"
    for ((c=columns-26; c<columns-2; c++)); do
        echo -ne "${Grey} "
    done
    echo -e "${Grey}x"

    # File Cells
    for ((r=rows-11; r<rows-1; r++)); do
        cursorpos pos ${r} 0
        echo -ne "${Grey}x"
        cursorpos pos ${r} $((columns-26))
        echo -ne "${Grey}x"
        cursorpos pos ${r} $((columns-1))
        echo -e "${Grey}x"
    done

    # Bottom of Files
    echo -ne "${Grey}m"
    for ((c=1; c<columns-26; c++)); do
        echo -ne "${Grey}q"
    done
    echo -ne "${Grey}v"
    for ((c=columns-26; c<columns-2; c++)); do
        echo -ne "${Grey}q"
    done
    echo -en "${Grey}j"

    write
    cnorm
}

success "Loaded $(basename "${BASH_SOURCE}")" >> "${eb3_LogsPath}startup.log"